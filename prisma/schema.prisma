// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DEV_DATABASE_URL")
}

enum Status {
  pending
  inprogress
  completed
}

// model Post {
//   id        Int     @id @default(autoincrement())
//   title     String
//   content   String?
//   published Boolean @default(false)
//   author    User?   @relation(fields: [authorId], references: [id])
//   authorId  Int?
// }

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String
  firstname  String
  lastname   String
  isVerified Boolean   @default(false)
  otp        String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Project    Project[]
}

model Project {
  id          String    @id @default(uuid())
  title       String
  about       String
  completed   Boolean   @default(false)
  completedAt DateTime?
  expiresAt   DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  todo        Todo[]
}

model Todo {
  id          String    @id @default(uuid())
  title       String
  description String
  priority    String
  status      Status    @default(pending)
  completed   Boolean   @default(false)
  completedAt DateTime?
  expiresAt   DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  project     Project   @relation(fields: [todoId], references: [id])
  todoId      String
}
