{"err":{},"level":"info","message":"yup.string(...).email(...).max(...).require is not a function","service":"user-service"}
{"err":{},"level":"info","message":"yup.string(...).email(...).max(...).require is not a function","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"body":"{\n    \"email\": \"sheyivibes@gmail.com\",\n    \"password\": \"12345@uat\",\n}","expose":true,"status":400,"statusCode":400,"type":"entity.parse.failed"},"level":"info","message":"Expected double-quoted property name in JSON at position 68","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.user.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:67:37\n\n  64   );\n  65 }\n  66 \n→ 67 const newUser = await prisma.user.create({\n       firstname: \"sheyi\",\n       ~~~~~~~~~\n       lastname: \"oluwa\",\n       username: \"vibes\",\n       email: \"sheyivibes@gmail.com\",\n       password: \"12345@uat\",\n     ? data?: UserCreateInput | UserUncheckedCreateInput\n     })\n\nUnknown argument `firstname`. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.user.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:66:37\n\n  63   );\n  64 }\n  65 \n→ 66 const newUser = await prisma.user.create({\n       firstname: \"sheyi\",\n       ~~~~~~~~~\n       lastname: \"oluwa\",\n       email: \"sheyivibes@gmail.com\",\n       password: \"12345@uat\",\n     ? data?: UserCreateInput | UserUncheckedCreateInput\n     })\n\nUnknown argument `firstname`. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","code":"P2002","meta":{"modelName":"User","target":["email"]},"name":"PrismaClientKnownRequestError"},"level":"info","message":"\nInvalid `prisma.user.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:66:37\n\n  63   );\n  64 }\n  65 \n→ 66 const newUser = await prisma.user.create(\nUnique constraint failed on the fields: (`email`)","service":"user-service"}
{"err":{"clientVersion":"5.16.1","code":"P2002","meta":{"modelName":"User","target":["email"]},"name":"PrismaClientKnownRequestError"},"level":"info","message":"\nInvalid `prisma.user.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:82:37\n\n  79   );\n  80 }\n  81 \n→ 82 const newUser = await prisma.user.create(\nUnique constraint failed on the fields: (`email`)","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.user.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:92:37\n\n  89     return hash;\n  90   });\n  91 \n→ 92 const newUser = await prisma.user.create({\n       data: {\n         firstname: \"sheyi\",\n         lastname: \"oluwa\",\n         email: \"sheyivb@gmail.com\",\n         password: {}\n                   ~~\n       }\n     })\n\nArgument `password`: Invalid value provided. Expected String, provided Object.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.user.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:93:37\n\n  90   });\n  91 console.log(\"hashpassword\", hashPassword);\n  92 \n→ 93 const newUser = await prisma.user.create({\n       data: {\n         firstname: \"sheyi\",\n         lastname: \"oluwa\",\n         email: \"sheyivb@gmail.com\",\n         password: {}\n                   ~~\n       }\n     })\n\nArgument `password`: Invalid value provided. Expected String, provided Object.","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{},"level":"info","message":"response is not defined","service":"user-service"}
{"err":{},"level":"info","message":"response is not defined","service":"user-service"}
{"err":{},"level":"info","message":"response is not defined","service":"user-service"}
{"err":{},"level":"info","message":"_ is not defined","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:6:34\n\n  3 const response = require(\"../utils/responseObject\");\n  4 \n  5 async function createProject(req, res) {\n→ 6   const user = await prisma.user.findUnique({\n        where: {\n          id: undefined,\n      ?   email?: String,\n      ?   AND?: UserWhereInput | UserWhereInput[],\n      ?   OR?: UserWhereInput[],\n      ?   NOT?: UserWhereInput | UserWhereInput[],\n      ?   password?: StringFilter | String,\n      ?   firstname?: StringFilter | String,\n      ?   lastname?: StringFilter | String,\n      ?   isVerified?: BoolFilter | Boolean,\n      ?   otp?: StringNullableFilter | String | Null,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   Project?: ProjectListRelationFilter\n        }\n      })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:6:34\n\n  3 const response = require(\"../utils/responseObject\");\n  4 \n  5 async function createProject(req, res) {\n→ 6   const user = await prisma.user.findUnique({\n        where: {\n          id: undefined,\n      ?   email?: String,\n      ?   AND?: UserWhereInput | UserWhereInput[],\n      ?   OR?: UserWhereInput[],\n      ?   NOT?: UserWhereInput | UserWhereInput[],\n      ?   password?: StringFilter | String,\n      ?   firstname?: StringFilter | String,\n      ?   lastname?: StringFilter | String,\n      ?   isVerified?: BoolFilter | Boolean,\n      ?   otp?: StringNullableFilter | String | Null,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   Project?: ProjectListRelationFilter\n        }\n      })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:6:34\n\n  3 const response = require(\"../utils/responseObject\");\n  4 \n  5 async function createProject(req, res) {\n→ 6   const user = await prisma.user.findUnique({\n        where: {\n          id: undefined,\n      ?   email?: String,\n      ?   AND?: UserWhereInput | UserWhereInput[],\n      ?   OR?: UserWhereInput[],\n      ?   NOT?: UserWhereInput | UserWhereInput[],\n      ?   password?: StringFilter | String,\n      ?   firstname?: StringFilter | String,\n      ?   lastname?: StringFilter | String,\n      ?   isVerified?: BoolFilter | Boolean,\n      ?   otp?: StringNullableFilter | String | Null,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   Project?: ProjectListRelationFilter\n        }\n      })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{},"level":"info","message":"user is not defined","service":"user-service"}
{"err":{},"level":"info","message":"user is not defined","service":"user-service"}
{"err":{"body":"{\n    \"title\": \"nodeit\",\n    \"about\": \"fintech website for training new siwes students\",\n    \"expiresAt\": \"2024-08-10\",\n   \n}","expose":true,"status":400,"statusCode":400,"type":"entity.parse.failed"},"level":"info","message":"Expected double-quoted property name in JSON at position 124","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:30:45\n\n  27   );\n  28 }\n  29 \n→ 30 const userProjects = await prisma.project.findUnique({\n       where: {\n         userId: undefined,\n     ?   id?: String,\n     ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n     ?   OR?: ProjectWhereInput[],\n     ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n     ?   title?: StringFilter | String,\n     ?   about?: StringFilter | String,\n     ?   completed?: BoolFilter | Boolean,\n     ?   completedAt?: DateTimeFilter | DateTime,\n     ?   expiresAt?: DateTimeFilter | DateTime,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   user?: UserRelationFilter | UserWhereInput,\n     ?   Todo?: TodoListRelationFilter\n       }\n     })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:30:45\n\n  27   );\n  28 }\n  29 \n→ 30 const userProjects = await prisma.project.findUnique({\n       where: {\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n     ?   id?: String,\n     ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n     ?   OR?: ProjectWhereInput[],\n     ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n     ?   title?: StringFilter | String,\n     ?   about?: StringFilter | String,\n     ?   completed?: BoolFilter | Boolean,\n     ?   completedAt?: DateTimeFilter | DateTime,\n     ?   expiresAt?: DateTimeFilter | DateTime,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   user?: UserRelationFilter | UserWhereInput,\n     ?   Todo?: TodoListRelationFilter\n       }\n     })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:30:45\n\n  27   );\n  28 }\n  29 \n→ 30 const userProjects = await prisma.project.findUnique({\n       where: {\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n     ?   id?: String,\n     ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n     ?   OR?: ProjectWhereInput[],\n     ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n     ?   title?: StringFilter | String,\n     ?   about?: StringFilter | String,\n     ?   completed?: BoolFilter | Boolean,\n     ?   completedAt?: DateTimeFilter | DateTime,\n     ?   expiresAt?: DateTimeFilter | DateTime,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   user?: UserRelationFilter | UserWhereInput,\n     ?   Todo?: TodoListRelationFilter\n       }\n     })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:30:45\n\n  27   );\n  28 }\n  29 \n→ 30 const userProjects = await prisma.project.findUnique({\n       where: {\n         title: \"nodeit\",\n     ?   id?: String,\n     ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n     ?   OR?: ProjectWhereInput[],\n     ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n     ?   about?: StringFilter | String,\n     ?   completed?: BoolFilter | Boolean,\n     ?   completedAt?: DateTimeFilter | DateTime,\n     ?   expiresAt?: DateTimeFilter | DateTime,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   userId?: StringFilter | String,\n     ?   user?: UserRelationFilter | UserWhereInput,\n     ?   Todo?: TodoListRelationFilter\n       }\n     })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:38:48\n\n  35 \n  36 // console.log(userProjects);\n  37 if (userProjects) {\n→ 38   const createProject = await prisma.project.create({\n         data: {\n           title: \"nodeit\",\n           about: \"fintech website for training new siwes students\",\n           expiresAt: \"2024-08-10\",\n           userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n       +   completedAt: DateTime\n         }\n       })\n\nArgument `completedAt` is missing.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:30:45\n\n  27   );\n  28 }\n  29 \n→ 30 const userProjects = await prisma.project.findUnique({\n       where: {\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n     ?   id?: String,\n     ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n     ?   OR?: ProjectWhereInput[],\n     ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n     ?   title?: StringFilter | String,\n     ?   about?: StringFilter | String,\n     ?   completed?: BoolFilter | Boolean,\n     ?   completedAt?: DateTimeFilter | DateTime,\n     ?   expiresAt?: DateTimeFilter | DateTime,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   user?: UserRelationFilter | UserWhereInput,\n     ?   Todo?: TodoListRelationFilter\n       }\n     })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:30:45\n\n  27   );\n  28 }\n  29 \n→ 30 const userProjects = await prisma.project.findUnique({\n       where: {\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n     ?   id?: String,\n     ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n     ?   OR?: ProjectWhereInput[],\n     ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n     ?   title?: StringFilter | String,\n     ?   about?: StringFilter | String,\n     ?   completed?: BoolFilter | Boolean,\n     ?   completedAt?: DateTimeFilter | DateTime,\n     ?   expiresAt?: DateTimeFilter | DateTime,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   user?: UserRelationFilter | UserWhereInput,\n     ?   Todo?: TodoListRelationFilter\n       }\n     })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:30:45\n\n  27   );\n  28 }\n  29 \n→ 30 const userProjects = await prisma.project.findUnique({\n       where: {\n         title: \"nodeit\",\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n     ?   id?: String,\n     ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n     ?   OR?: ProjectWhereInput[],\n     ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n     ?   about?: StringFilter | String,\n     ?   completed?: BoolFilter | Boolean,\n     ?   completedAt?: DateTimeFilter | DateTime,\n     ?   expiresAt?: DateTimeFilter | DateTime,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   user?: UserRelationFilter | UserWhereInput,\n     ?   Todo?: TodoListRelationFilter\n       }\n     })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:30:45\n\n  27   );\n  28 }\n  29 \n→ 30 const userProjects = await prisma.project.findUnique({\n       where: {\n         title: \"nodeit\",\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n     ?   id?: String,\n     ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n     ?   OR?: ProjectWhereInput[],\n     ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n     ?   about?: StringFilter | String,\n     ?   completed?: BoolFilter | Boolean,\n     ?   completedAt?: DateTimeFilter | DateTime,\n     ?   expiresAt?: DateTimeFilter | DateTime,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   user?: UserRelationFilter | UserWhereInput,\n     ?   Todo?: TodoListRelationFilter\n       }\n     })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'length')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'length')","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:30:45\n\n  27   );\n  28 }\n  29 console.log(\"we got here\");\n→ 30 const userProjects = await prisma.project.findUnique({\n       where: {\n         title: \"nodeit\",\n     ?   id?: String,\n     ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n     ?   OR?: ProjectWhereInput[],\n     ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n     ?   about?: StringFilter | String,\n     ?   completed?: BoolFilter | Boolean,\n     ?   completedAt?: DateTimeFilter | DateTime,\n     ?   expiresAt?: DateTimeFilter | DateTime,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   userId?: StringFilter | String,\n     ?   user?: UserRelationFilter | UserWhereInput,\n     ?   Todo?: TodoListRelationFilter\n       }\n     })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:39:48\n\n  36 console.log(\"HSHSHHJSJH\", userProjects);\n  37 // console.log(userProjects);\n  38 if (userProjects.length <= 0) {\n→ 39   const createProject = await prisma.project.create({\n         data: {\n           title: \"nodeit\",\n           about: \"fintech website for training new siwes students\",\n           expiresAt: \"2024-08-10\",\n       +   completedAt: DateTime\n         }\n       })\n\nArgument `completedAt` is missing.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:39:48\n\n  36 console.log(\"HSHSHHJSJH\", userProjects);\n  37 // console.log(userProjects);\n  38 if (userProjects.length <= 0) {\n→ 39   const createProject = await prisma.project.create({\n         data: {\n           title: \"nodeit\",\n           about: \"fintech website for training new siwes students\",\n           expiresAt: \"2024-08-10\",\n           userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n       +   completedAt: DateTime\n         }\n       })\n\nArgument `completedAt` is missing.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:39:48\n\n  36 console.log(\"HSHSHHJSJH\", userProjects);\n  37 // console.log(userProjects);\n  38 if (userProjects.length <= 0) {\n→ 39   const createProject = await prisma.project.create({\n         data: {\n           title: \"nodeit\",\n           about: \"fintech website for training new siwes students\",\n           expiresAt: \"2024-08-10\",\n           userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n       +   completedAt: DateTime\n         }\n       })\n\nArgument `completedAt` is missing.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:48\n\n  37 // console.log(userProjects);\n  38 if (userProjects.length <= 0) {\n  39   console.log(payload);\n→ 40   const createProject = await prisma.project.create({\n         data: {\n           title: \"nodeit\",\n           about: \"fintech website for training new siwes students\",\n           expiresAt: \"2024-08-10\",\n                      ~~~~~~~~~~~~\n           userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n         }\n       })\n\nInvalid value for argument `expiresAt`: premature end of input. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:48\n\n  37 // console.log(userProjects);\n  38 if (userProjects.length <= 0) {\n  39   console.log(payload);\n→ 40   const createProject = await prisma.project.create({\n         data: {\n           title: \"nodeit\",\n           about: \"fintech website for training new siwes students\",\n           expiresAt: \"Tue Jul 16 2024 12:36:44 GMT+0100 (West Africa Standard Time)\",\n                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n           userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n         }\n       })\n\nInvalid value for argument `expiresAt`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:48\n\n  37 // console.log(userProjects);\n  38 if (userProjects.length <= 0) {\n  39   console.log(payload);\n→ 40   const createProject = await prisma.project.create({\n         data: {\n           title: \"nodeit\",\n           about: \"fintech website for training new siwes students\",\n           expiresAt: \"Tue Jul 16 2024 12:36:44 GMT+0100 (West Africa Standard Time)\",\n                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n           userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n         }\n       })\n\nInvalid value for argument `expiresAt`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"Tue Jul 16 2024 12:36:44 GMT+0100 (West Africa Standard Time)\",\n                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n       }\n     })\n\nInvalid value for argument `expiresAt`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"Tue Jul 16 2024 12:36:44 GMT+0100 (West Africa Standard Time)\",\n                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n       }\n     })\n\nInvalid value for argument `expiresAt`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"Tue Jul 16 2024 12:36:44 GMT+0100 (West Africa Standard Time)\",\n                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n       }\n     })\n\nInvalid value for argument `expiresAt`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 // console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"Tue Jul 16 2024 12:36:44 GMT+0100 (West Africa Standard Time)\",\n                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n       }\n     })\n\nInvalid value for argument `expiresAt`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 // console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"Tue Jul 16 2024 12:36:44 GMT+0100 (West Africa Standard Time)\",\n                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n       }\n     })\n\nInvalid value for argument `expiresAt`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 // console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"T2024-08-10\",\n                    ~~~~~~~~~~~~~\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n       }\n     })\n\nInvalid value for argument `expiresAt`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 // console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"T2024-08-10\",\n                    ~~~~~~~~~~~~~\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n       }\n     })\n\nInvalid value for argument `expiresAt`: input contains invalid characters. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 // console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"2024-08-10\",\n                    ~~~~~~~~~~~~\n         userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n       }\n     })\n\nInvalid value for argument `expiresAt`: premature end of input. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 // console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"2024-08-10\",\n                    ~~~~~~~~~~~~\n         user: {\n           connect: {\n             userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\"\n           }\n         }\n       }\n     })\n\nInvalid value for argument `expiresAt`: premature end of input. Expected ISO-8601 DateTime.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 // console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"2024-08-14T13:15:03-08:00\",\n         user: {\n           connect: {\n             userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n             ~~~~~~\n     ?       id?: String,\n     ?       email?: String,\n     ?       AND?: UserWhereInput | UserWhereInput[],\n     ?       OR?: UserWhereInput[],\n     ?       NOT?: UserWhereInput | UserWhereInput[],\n     ?       password?: StringFilter | String,\n     ?       firstname?: StringFilter | String,\n     ?       lastname?: StringFilter | String,\n     ?       isVerified?: BoolFilter | Boolean,\n     ?       otp?: StringNullableFilter | String | Null,\n     ?       createdAt?: DateTimeFilter | DateTime,\n     ?       updatedAt?: DateTimeFilter | DateTime,\n     ?       Project?: ProjectListRelationFilter\n           }\n         }\n       }\n     })\n\nUnknown argument `userId`. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:40:46\n\n  37 // // console.log(userProjects);\n  38 // if (userProjects.length <= 0) {\n  39 // console.log(req.user);\n→ 40 const createProject = await prisma.project.create({\n       data: {\n         title: \"nodeit\",\n         about: \"fintech website for training new siwes students\",\n         expiresAt: \"2024-08-14T13:15:03-08:00\",\n         user: {\n           connect: {\n             userId: \"c7a090e9-f136-41a5-a404-60898a0d2c71\",\n             ~~~~~~\n     ?       id?: String,\n     ?       email?: String,\n     ?       AND?: UserWhereInput | UserWhereInput[],\n     ?       OR?: UserWhereInput[],\n     ?       NOT?: UserWhereInput | UserWhereInput[],\n     ?       password?: StringFilter | String,\n     ?       firstname?: StringFilter | String,\n     ?       lastname?: StringFilter | String,\n     ?       isVerified?: BoolFilter | Boolean,\n     ?       otp?: StringNullableFilter | String | Null,\n     ?       createdAt?: DateTimeFilter | DateTime,\n     ?       updatedAt?: DateTimeFilter | DateTime,\n     ?       Project?: ProjectListRelationFilter\n           }\n         }\n       }\n     })\n\nUnknown argument `userId`. Available options are marked with ?.","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","code":"P2002","meta":{"modelName":"User","target":["email"]},"name":"PrismaClientKnownRequestError"},"level":"info","message":"\nInvalid `prisma.user.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:115:37\n\n  112   });\n  113 console.log(\"hashpassword\", hashPassword);\n  114 \n→ 115 const newUser = await prisma.user.create(\nUnique constraint failed on the fields: (`email`)","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.update()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:118:43\n\n  115   );\n  116 }\n  117 \n→ 118 const updateUser = await prisma.project.update({\n        where: {\n          title: undefined,\n      ?   id?: String,\n      ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n      ?   OR?: ProjectWhereInput[],\n      ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n      ?   about?: StringFilter | String,\n      ?   completed?: BoolFilter | Boolean,\n      ?   completedAt?: DateTimeNullableFilter | DateTime | Null,\n      ?   expiresAt?: DateTimeFilter | DateTime,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   userId?: StringFilter | String,\n      ?   user?: UserRelationFilter | UserWhereInput,\n      ?   todo?: TodoListRelationFilter\n        },\n        data: {}\n      })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.update()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:126:43\n\n  123   );\n  124 }\n  125 \n→ 126 const updateUser = await prisma.project.update({\n        where: {\n          title: \"nodeit\",\n      ?   id?: String,\n      ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n      ?   OR?: ProjectWhereInput[],\n      ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n      ?   about?: StringFilter | String,\n      ?   completed?: BoolFilter | Boolean,\n      ?   completedAt?: DateTimeNullableFilter | DateTime | Null,\n      ?   expiresAt?: DateTimeFilter | DateTime,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   userId?: StringFilter | String,\n      ?   user?: UserRelationFilter | UserWhereInput,\n      ?   todo?: TodoListRelationFilter\n        },\n        data: {\n          about: \"changed\"\n        }\n      })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.update()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:126:43\n\n  123   );\n  124 }\n  125 \n→ 126 const updateUser = await prisma.project.update({\n        where: {\n          title: \"nodeit\",\n      ?   id?: String,\n      ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n      ?   OR?: ProjectWhereInput[],\n      ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n      ?   about?: StringFilter | String,\n      ?   completed?: BoolFilter | Boolean,\n      ?   completedAt?: DateTimeNullableFilter | DateTime | Null,\n      ?   expiresAt?: DateTimeFilter | DateTime,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   userId?: StringFilter | String,\n      ?   user?: UserRelationFilter | UserWhereInput,\n      ?   todo?: TodoListRelationFilter\n        },\n        data: {\n          about: \"changed\"\n        }\n      })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.project.update()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/projectController.js:126:43\n\n  123   );\n  124 }\n  125 \n→ 126 const updateUser = await prisma.project.update({\n        where: {\n          title: undefined,\n      ?   id?: String,\n      ?   AND?: ProjectWhereInput | ProjectWhereInput[],\n      ?   OR?: ProjectWhereInput[],\n      ?   NOT?: ProjectWhereInput | ProjectWhereInput[],\n      ?   about?: StringFilter | String,\n      ?   completed?: BoolFilter | Boolean,\n      ?   completedAt?: DateTimeNullableFilter | DateTime | Null,\n      ?   expiresAt?: DateTimeFilter | DateTime,\n      ?   createdAt?: DateTimeFilter | DateTime,\n      ?   updatedAt?: DateTimeFilter | DateTime,\n      ?   userId?: StringFilter | String,\n      ?   user?: UserRelationFilter | UserWhereInput,\n      ?   todo?: TodoListRelationFilter\n        },\n        data: {\n          about: \"changed\"\n        }\n      })\n\nArgument `where` of type ProjectWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"es is not defined","service":"user-service"}
{"err":{},"level":"info","message":"updateUser is not defined","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'password')","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:18:34\n\n  15 console.log(req.body);\n  16 const payload = _.pick(req.body, [\"email\", \"password\"]);\n  17 console.log(\"PAYLOAD\", payload);\n→ 18 const user = await prisma.user.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'password')","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:18:34\n\n  15 console.log(req.body);\n  16 const payload = _.pick(req.body, [\"email\", \"password\"]);\n  17 console.log(\"PAYLOAD\", payload);\n→ 18 const user = await prisma.user.findUnique({\n       where: {\n         email: undefined,\n     ?   id?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   password?: StringFilter | String,\n     ?   firstname?: StringFilter | String,\n     ?   lastname?: StringFilter | String,\n     ?   isVerified?: BoolFilter | Boolean,\n     ?   otp?: StringNullableFilter | String | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   Project?: ProjectListRelationFilter\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:18:34\n\n  15 console.log(req.body);\n  16 const payload = _.pick(req.body, [\"email\", \"password\"]);\n  17 console.log(\"PAYLOAD\", payload);\n→ 18 const user = await prisma.user.findUnique({\n       where: {\n         email: undefined,\n     ?   id?: String,\n     ?   AND?: UserWhereInput | UserWhereInput[],\n     ?   OR?: UserWhereInput[],\n     ?   NOT?: UserWhereInput | UserWhereInput[],\n     ?   password?: StringFilter | String,\n     ?   firstname?: StringFilter | String,\n     ?   lastname?: StringFilter | String,\n     ?   isVerified?: BoolFilter | Boolean,\n     ?   otp?: StringNullableFilter | String | Null,\n     ?   createdAt?: DateTimeFilter | DateTime,\n     ?   updatedAt?: DateTimeFilter | DateTime,\n     ?   Project?: ProjectListRelationFilter\n       }\n     })\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.","service":"user-service"}
{"err":{},"level":"info","message":"data and hash arguments required","service":"user-service"}
{"err":{"body":"{\n    \"email\": \"simonadma@gmail.com\",\n\n}","expose":true,"status":400,"statusCode":400,"type":"entity.parse.failed"},"level":"info","message":"Expected double-quoted property name in JSON at position 39","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'id')","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'id')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{},"level":"info","message":"err is not defined","service":"user-service"}
{"err":{},"level":"info","message":"err is not defined","service":"user-service"}
{"err":{},"level":"info","message":"err is not defined","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of undefined (reading '0')","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{},"level":"info","message":"OK is not defined","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.todo.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:31:40\n\n  28   );\n  29 }\n  30 \n→ 31 const createTodo = await prisma.todo.create(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{},"level":"info","message":"id is not defined","service":"user-service"}
{"err":{"clientVersion":"5.16.1","code":"P2024","meta":{"connection_limit":17,"modelName":"Todo","timeout":10},"name":"PrismaClientKnownRequestError"},"level":"info","message":"\nInvalid `prisma.todo.findMany()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:50:35\n\n  47 // get todos for a specific project\n  48 async function getTodos(req, res) {\n  49   const { projectid } = req.params;\n→ 50   const todos = await prisma.todo.findMany(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 17)","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'id')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'id')","service":"user-service"}
{"err":{},"level":"info","message":"projectId is not defined","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.todo.findMany()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:93:35\n\n  90   );\n  91 }\n  92 // console.log(\"existed\", project);\n→ 93 const todos = await prisma.todo.findMany({\n       where: {\n         todoId: \"854140fe-f190-40c5-b99c-07f448dfb257\",\n         status: \"nn\"\n                 ~~~~\n       }\n     })\n\nInvalid value for argument `status`. Expected Status.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.todo.findMany()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:93:35\n\n  90   );\n  91 }\n  92 // console.log(\"existed\", project);\n→ 93 const todos = await prisma.todo.findMany({\n       where: {\n         todoId: \"854140fe-f190-40c5-b99c-07f448dfb257\",\n         status: \"pen\"\n                 ~~~~~\n       }\n     })\n\nInvalid value for argument `status`. Expected Status.","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:174:45\n\n  171 }\n  172 console.log(\"updatePayload\", updatePayload);\n  173 \n→ 174 const projectExist = await prisma.project.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:174:45\n\n  171 }\n  172 console.log(\"updatePayload\", updatePayload);\n  173 \n→ 174 const projectExist = await prisma.project.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:174:45\n\n  171 }\n  172 console.log(\"updatePayload\", updatePayload);\n  173 \n→ 174 const projectExist = await prisma.project.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.project.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:174:45\n\n  171 }\n  172 console.log(\"updatePayload\", updatePayload);\n  173 \n→ 174 const projectExist = await prisma.project.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'id')","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientValidationError"},"level":"info","message":"\nInvalid `prisma.todo.update()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:209:35\n\n  206   );\n  207 }\n  208 \n→ 209 const todos = await prisma.todo.update({\n        where: {\n          id: \"b07c163c-449f-4c53-ad14-d799a8ae59c3\",\n          todoId: \"adac53cb-a091-44c4-85ee-d09e4e03a011\"\n        },\n        data: {\n          title: \"changed\",\n          description: \"dd\",\n          priority: \"high\",\n          status: \"gdhdfghghd\",\n                  ~~~~~~~~~~~~\n          completed: true,\n          expiresAt: \"2024-08-14T13:15:03-08:00\"\n        }\n      })\n\nInvalid value for argument `status`. Expected Status.","service":"user-service"}
{"err":{},"level":"info","message":"Status is not defined","service":"user-service"}
{"err":{},"level":"info","message":"Status is not defined","service":"user-service"}
{"err":{},"level":"info","message":"Status is not defined","service":"user-service"}
{"err":{},"level":"info","message":"Status is not defined","service":"user-service"}
{"err":{},"level":"info","message":"todos is not defined","service":"user-service"}
{"err":{},"level":"info","message":"todos is not defined","service":"user-service"}
{"err":{"clientVersion":"5.16.1","code":"P2025","meta":{"cause":"Record to delete does not exist.","modelName":"Todo"},"name":"PrismaClientKnownRequestError"},"level":"info","message":"\nInvalid `prisma.todo.delete()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:255:45\n\n  252 const { todoid } = req.params;\n  253 console.log(todoid);\n  254 \n→ 255 const todoExist = await prisma.todo.delete(\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","code":"P2025","meta":{"cause":"Record to delete does not exist.","modelName":"Todo"},"name":"PrismaClientKnownRequestError"},"level":"info","message":"\nInvalid `prisma.todo.delete()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/todoController.js:255:45\n\n  252 const { todoid } = req.params;\n  253 console.log(todoid);\n  254 \n→ 255 const todoExist = await prisma.todo.delete(\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist.","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","code":"P2002","meta":{"modelName":"User","target":["email"]},"name":"PrismaClientKnownRequestError"},"level":"info","message":"\nInvalid `prisma.user.create()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:128:37\n\n  125   });\n  126 // console.log(\"hashpassword\", hashPassword);\n  127 \n→ 128 const newUser = await prisma.user.create(\nUnique constraint failed on the fields: (`email`)","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:104:42\n\n  101     })\n  102   );\n  103 }\n→ 104 const existingUser = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:104:42\n\n  101     })\n  102   );\n  103 }\n→ 104 const existingUser = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:104:42\n\n  101     })\n  102   );\n  103 }\n→ 104 const existingUser = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:104:42\n\n  101     })\n  102   );\n  103 }\n→ 104 const existingUser = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `localhost:5432`\n\nPlease make sure your database server is running at `localhost:5432`.","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{"clientVersion":"5.16.1","name":"PrismaClientInitializationError"},"level":"info","message":"\nInvalid `prisma.user.findUnique()` invocation in\n/Users/chubiy/Desktop/work/IT/nodeIT5/controllers/authController.js:31:34\n\n  28   );\n  29 }\n  30 \n→ 31 const user = await prisma.user.findUnique(\nCan't reach database server at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`\n\nPlease make sure your database server is running at `dpg-cqbi3piju9rs7391o8b0-a.oregon-postgres.render.com:5432`.","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{"code":"ERR_HTTP_HEADERS_SENT"},"level":"info","message":"Cannot set headers after they are sent to the client","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'password')","service":"user-service"}
{"err":{},"level":"info","message":"Cannot read properties of null (reading 'password')","service":"user-service"}
